@model CreatePostViewModel

@{
    ViewBag.Title = "Create Post";
    // Layout = "_Layout";
}

<form asp-action="CreatePost" method="post">
    <link rel="stylesheet" href="~/skeditorscript/ckeditor4/plugins/codesnippet/lib/highlight/styles/monokai_sublime.css">
    <script src="~/skeditorscript/ckeditor4/ckeditor.js"></script>
    <script src="~/skeditorscript/ckeditor4/plugins/codesnippet/lib/highlight/highlight.pack.js"></script>
    <div>
        <label>Title</label>
        <input asp-for="Post.Title" />
    </div>
    <div>
        <label>Content</label>
        <textarea asp-for="Post.Content" id="content"></textarea>
    </div>
    <div>
        <label>Tags</label>
        <input id="tagFind" onchange="getTagsByName(tagFind.value)" />
        <div id="selectedTag"></div>
        <select id="selectTag">
            @try
            {
                @foreach (var tag in @Model.Tags)
                {
                    <option value="@tag.Id">@tag.Name</option>
                }  
            }
            catch {}
        </select>
    </div>
    <button type="submit">Post</button>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            let config = {
                extraPlugins: "codesnippet",
                codeSnippet_theme: 'monokai_sublime',
                height: 365
            };
            let editor = CKEDITOR.replace("content", config);
        });
    </script>
    <script>
        const urlOrigin = "https://localhost:5000";
        const getTagsByName = async (name) => {
            try {
                const response = await fetch(urlOrigin + `/api/tags/${name}`, {
                    method: "GET"
                });

                let data = await response.json();

                selectTag.innerHtml = "";

                //need to set onchange on select tag
                data.map((tag) => {
                    let option = document.createElement("option");
                    option.textContent = tag.name;
                    option.value = tag.id;
                    option.addEventListener("onclick", function () {
                        console.log("click");
                        let div = document.createElement("div");
                        div.textContent = tag.name;
                        selectedTag.appendChild(div);
                    });
                    selectTag.appendChild(option);
                })
            }
            catch {
            }
        }
    </script>
</form>