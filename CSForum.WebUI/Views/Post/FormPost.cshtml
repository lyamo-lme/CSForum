@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer ViewLocalizer
@model CreatePostView
@{
    ViewBag.Title = "Create Post";
    // Layout = "_Layout";
}

<form id="formPost" class="form-post" asp-action="CreatePost" method="post">
    <link rel="stylesheet" href="~/skeditorscript/ckeditor4/plugins/codesnippet/lib/highlight/styles/monokai_sublime.css">
    <script src="~/skeditorscript/ckeditor4/ckeditor.js"></script>
    <script src="~/skeditorscript/ckeditor4/plugins/codesnippet/lib/highlight/highlight.pack.js"></script>
    <div>
        <label>@ViewLocalizer["Title"]</label>
        <textarea style="resize: none;width: 100%;height: 100px"  class="input-box" asp-for="Title" ></textarea>
    </div>
    <div>
        <label>@ViewLocalizer["Content"]</label>
        <textarea class="border-radius-ckeditor" asp-for="Content" id="content"></textarea>
    </div>
    <div>
        <label>@ViewLocalizer["Tags"]</label>
        <div style="display: flex">
            <input class="input-box tag-find"/>
            <select class="selectTag">
            </select>
        </div>
        <div id="selectedTag" class="selected-tag"></div>
    </div>
    <div style="display: flex; justify-content: center">
    <button class="button-submit" type="submit">@ViewLocalizer["CreatePost"]</button>
    </div>
    <script>
    let editor = null;
        document.addEventListener("DOMContentLoaded", () => {
            let config = {
                extraPlugins: "codesnippet",
                codeSnippet_theme: 'monokai_sublime',
                height: 365
            };
            editor = CKEDITOR.replace("content", config);
            console.log(editor)
        });
        
        let form = document.querySelector("#formPost");
        form.addEventListener("submit", async (e) => {    
             e.preventDefault(); 
            form = document.querySelector("#formPost");
            const formData = new FormData(form);
            let data = JSON.parse(JSON.stringify(Object.fromEntries(formData)));
            data.PostTags = [];
            for (let i=0;i<selectedTagIds.length;i++){
                data.PostTags.push({
                tagId: selectedTagIds[i]  
                });
            }
            data.Content = editor.getData();
            let body=  JSON.stringify(data); 
            let response = await fetch(form.baseURI,
            {
                headers: {
                  'Accept': 'application/json',
                  'Content-Type': 'application/json'
                },
                method: "POST",
                body: body
            });
            window.location.replace(response.url);
            });
    </script>
    <script src="~/ts/loadTag.js"></script>
</form>