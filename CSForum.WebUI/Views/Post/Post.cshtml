@model PostViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using CSForum.Core.Models
@using CSForum.Services.Extensions
@inject IViewLocalizer ViewLocalize
@inject UserManager<User> UserManager

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}

@{
    var ownPost = @Model.UserId == UserManager.GetId(User);
}
<h2>@Model.Title</h2>

<div class="post-block">
    <div class="post-info">
        <p>
            <b>Created: </b>@Model.DateCreate
        </p>
        <p>
            <a asp-controller="User" asp-action="GetUserById" asp-route-id="@Model.PostCreator.Id">
                by @Model.PostCreator.UserName
            </a>
        </p>
        @if (ownPost)
        {
            <button>
                <a asp-controller="Post" asp-action="UpdatePostState" asp-route-postId="@Model.Id">
                    @ViewLocalize[@Model.Solved ? "MarkSolveFalse" : "MarkSolveTrue"]
                </a>
            </button>
        }
    </div>
    <div class="post-content">
        @Html.Raw(@Model.Content)
    </div>
    <div id="selectedTag" class="selected-tag">
        @if (Model.PostTags != null)
        {
            @foreach (var postTag in @Model.PostTags)
            {
                <div>@postTag.Tag.Name</div>
            }
        }
    </div>
</div>
<div class="line-yellow"></div>
<div>
    @if (@Model.Answers != null)
    {
        @foreach (var answers in @Model.Answers)
        {
            <div>
                <div>
                    @if (!@answers.Accepted && ownPost)
                    {
                        <form asp-controller="Answer" asp-action="" method="post">
                            <button name="answerId" value="@answers.Id"></button>
                        </form>
                    }
                </div>
                <p>
                    <a asp-controller="User" asp-action="GetUserById" asp-route-id="@answers.AnswerCreator.Id">@answers.AnswerCreator.UserName</a>
                </p>
                <p>@Html.Raw(@answers.ContentBody)</p>
            </div>
        }
    }
</div>

@if (User.Identity.IsAuthenticated)
{
    <div style="display: flex;justify-content: flex-end;">
        <button onclick="showAnswerForm()" class="post btn-dark">Give Answer</button>
    </div>
    @await Html.PartialAsync("AnswerFormPartialView", new CreateAnswerViewModel
           {
               PostId = @Model.Id
           })
}
<script>
 let answerForm = document.querySelector("#answerForm");
 
function showAnswerForm(){
   answerForm.style.display=="none"?
    answerForm.style.display="block":
     answerForm.style.display="none";
}
 </script>