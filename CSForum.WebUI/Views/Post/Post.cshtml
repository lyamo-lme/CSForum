@model PostViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using CSForum.Core.Models
@using CSForum.Services.Extensions
@inject IViewLocalizer ViewLocalize
@inject UserManager<User> UserManager

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}

@{
    var ownPost = @Model.UserId == UserManager.GetId(User);
    var solved = @Model.Solved;
}

<div class="post-block">
    <div class="post-info">
        <div class="title">
            <h2 class="title-text">@Model.Title</h2>

            @if (solved)
            {
                <div class="solved">
                    <p class="solved">
                        Solved
                    </p>
                </div>
            }
        </div>
        <div class="info-container">
            <p>
                <b>Created: </b>@Model.DateCreate
            </p>
            <p>
                <a asp-controller="User" asp-action="GetUserById" asp-route-id="@Model.PostCreator.Id">
                    by @Model.PostCreator.UserName
                </a>
            </p>
        </div>

        @if (ownPost)
        {
            <button>
                <a asp-controller="Post" asp-action="UpdatePostState" asp-route-postId="@Model.Id">
                    @ViewLocalize[@Model.Solved ? "MarkSolveFalse" : "MarkSolveTrue"]
                </a>
            </button>
        }
    </div>
    <div class="post-content">
        @Html.Raw(@Model.Content)
    </div>
    <div id="selectedTag" class="selected-tag">
        @if (Model.PostTags != null)
        {
            @foreach (var postTag in @Model.PostTags)
            {
                <div>@postTag.Tag.Name</div>
            }
        }
    </div>
</div>
<div class="line-yellow"></div>
<div>
    @if (@Model.Answers != null)
    {
        @foreach (var @answer in @Model.Answers)
        {
            <div class="post-answer">
                <div class="accept">
                    @if (@answer.Accepted)
                    {
                        <svg class="wrap-st0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="Layer_1" style="enable-background:new 0 0 512 512;" version="1.1" viewBox="0 0 512 512" xml:space="preserve">

                            <g>
                                <polygon class="st0" points="434.8,49 174.2,309.7 76.8,212.3 0,289.2 174.1,463.3 196.6,440.9 196.6,440.9 511.7,125.8 434.8,49     "/>
                            </g>
                        </svg>
                    }
                </div>
                <div class="content">
                    <div class="container-info">
                        <p class="user">
                            <a asp-controller="User" asp-action="GetUserById" asp-route-id="@@answer.AnswerCreator.Id">@@answer.AnswerCreator.UserName</a>
                        </p>
                        @if (ownPost)
                        {
                            <form class="state" asp-controller="Answer" asp-action="UpdateState" method="post">
                                <button name="answerId" value="@@answer.Id">
                                    @ViewLocalize[@answer.Accepted ? "Reject" : "Accept"]
                                </button>
                            </form>
                        }
                    </div>

                    <p>@Html.Raw(@answer.ContentBody)</p>
                </div>
            </div>
        }
    }
</div>

@if (User.Identity.IsAuthenticated)
{
    <div style="display: flex;justify-content: flex-end;">
        <button onclick="showAnswerForm()" class="post btn-dark">Give Answer</button>
    </div>
    @await Html.PartialAsync("AnswerFormPartialView", new CreateAnswerViewModel
           {
               PostId = @Model.Id
           })
}
<script>
 let answerForm = document.querySelector("#answerForm");
 
function showAnswerForm(){
   answerForm.style.display=="none"?
    answerForm.style.display="block":
     answerForm.style.display="none";
}
 </script>