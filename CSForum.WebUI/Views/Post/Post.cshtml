@model CSForum.Shared.Models.ViewModels.PostViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using CSForum.Core.Models
@using CSForum.Services.Extensions
@inject IViewLocalizer ViewLocalize
@inject UserManager<User> UserManager

@{
    ViewBag.Title = @Model.Title;
    Layout = "_Layout";
}

@{
    bool ownPost = false;
    try
    {
        ownPost = @Model.UserId == UserManager.GetId(User);
    }
    catch
    {
    }
    var solved = @Model.Solved;
    var auth = User.Identity.IsAuthenticated;
}

<div class="post-block">
    <div class="post-info">
        <div class="title">
            <h2 class="title-text">@Model.Title</h2>
            <div class="solved">
                @if (solved)
                {
                    <p class="solved">
                        @ViewLocalize["Solved"]
                    </p>
                }

                @if (ownPost )
                {
                    <button class="mark-solve">
                        <a asp-controller="Post"
                           asp-action="UpdatePostState"
                           asp-route-postId="@Model.Id">
                            @ViewLocalize[@Model.Solved ? "MarkSolveFalse" : "MarkSolveTrue"]
                        </a>
                    </button>
                }
            </div>

        </div>
        <div class="info-container">
            <p>
                <b>@ViewLocalize["Posted"]: </b>@Model.DateCreate
            </p>
            <p>
                <a asp-controller="User"
                   asp-action="GetUserById"
                   asp-route-id="@Model.PostCreator.Id">
                    by @Model.PostCreator.UserName
                </a>
            </p>
        </div>
    </div>
    <div class="post-content">
        @Html.Raw(@Model.Content)
    </div>
    <div id="selectedTag"
         class="selected-tag">
        @if (Model.PostTags != null)
        {
            @foreach (var postTag in @Model.PostTags)
            {
                <div>@postTag.Tag.Name</div>
            }
        }
    </div>
</div>
@*Answers*@
<div class="line-yellow"></div>
<div>
    <h3>
        @Model.Answers.Count @ViewLocalize["CountAnswers"]
    </h3>
    @if (@Model.Answers != null)
    {
        @foreach (var @answer in @Model.Answers)
        {
            <div class="post-answer">
                <div class="accept">
                    @if (@answer.Accepted)
                    {
                        <svg class="wrap-st0"
                             xmlns="http://www.w3.org/2000/svg"
                             xmlns:xlink="http://www.w3.org/1999/xlink"
                             id="Layer_1" style="enable-background:new 0 0 512 512;" version="1.1" viewBox="0 0 512 512" xml:space="preserve">
                            <g>
                                <polygon
                                    class="st0"
                                    points="434.8,49 174.2,309.7 76.8,212.3 0,289.2 174.1,463.3 196.6,440.9 196.6,440.9 511.7,125.8 434.8,49"/>
                            </g>
                        </svg>
                    }
                </div>
                <div class="content">
                    <div class="container-info">
                        <p class="user">
                            <a asp-controller="User"
                               asp-action="GetUserById"
                               asp-route-id="@answer.AnswerCreator.Id"
                               asp-route-additionalInfo="">
                                @answer.AnswerCreator.UserName
                            </a>
                        </p>
                        @if (ownPost && @Model.UserId != UserManager.GetId(User))
                        {
                            <form class="state"
                                  asp-controller="Answer"
                                  asp-action="UpdateState"
                                  method="post">
                                <button class="mark-solve" name="answerId" value="@answer.Id">
                                    @ViewLocalize[@answer.Accepted ? "Reject" : "Accept"]
                                </button>
                            </form>
                        }
                    </div>
                    <div class="content-fill">
                        @Html.Raw(@answer.ContentBody)
                    </div>
                </div>
            </div>
        }
    }
</div>

@if (auth)
{
    <div>
        <h2>Your answer</h2>
        @await Html.PartialAsync("AnswerFormPartialView", new CreateAnswerViewModel { PostId = @Model.Id })
    </div>
}